{"name":"masx200_deno_caddy_cluster_reverse_proxy","desc":"deno-caddy-cluster-reverse-proxy,使用deno,根据需要的服务子进程数量(默认为cpu个数),找到任意空闲的端口,然后启动子进程开启服务进程集群,使用caddy进行反向代理.适用于服务进程是单进程服务,比如说node或者deno.支持https和http.","repo":"https://github.com/masx200/deno-caddy-cluster-reverse-proxy","reg":"x","vers":"1.0.0"}
{"name":"masx200_deno_caddy_cluster_reverse_proxy","desc":"deno-caddy-cluster-reverse-proxy,使用deno,根据需要的服务子进程数量(默认为cpu个数),找到任意空闲的端口,然后启动子进程开启服务进程集群,使用caddy进行反向代理.适用于服务进程是单进程服务,比如说node或者deno.支持https和http.","repo":"https://github.com/masx200/deno-caddy-cluster-reverse-proxy","reg":"x","vers":"1.0.1"}
{"name":"masx200_deno_caddy_cluster_reverse_proxy","desc":"deno-caddy-cluster-reverse-proxy,使用deno,根据需要的服务子进程数量(默认为cpu个数),找到任意空闲的端口,然后启动子进程开启服务进程集群,使用caddy进行反向代理.适用于服务进程是单进程服务,比如说node或者deno.支持https和http.","repo":"https://github.com/masx200/deno-caddy-cluster-reverse-proxy","reg":"x","vers":"1.0.2"}
{"name":"masx200_deno_caddy_cluster_reverse_proxy","desc":"deno-caddy-cluster-reverse-proxy,使用deno,根据需要的服务子进程数量(默认为cpu个数),找到任意空闲的端口,然后启动子进程开启服务进程集群,使用caddy进行反向代理.适用于服务进程是单进程服务,比如说node或者deno.支持https和http.","repo":"https://github.com/masx200/deno-caddy-cluster-reverse-proxy","reg":"x","vers":"1.0.3"}
{"name":"masx200_deno_caddy_cluster_reverse_proxy","desc":"deno-caddy-cluster-reverse-proxy,适用于Deno的分布式微服务注册与发现服务器和客户端.","repo":"https://github.com/masx200/deno-caddy-cluster-reverse-proxy","reg":"x","vers":"2.0.0"}
{"name":"masx200_deno_caddy_cluster_reverse_proxy","desc":"deno-caddy-cluster-reverse-proxy,适用于Deno的分布式微服务注册与发现服务器和客户端.","repo":"https://github.com/masx200/deno-caddy-cluster-reverse-proxy","reg":"x","vers":"2.0.1"}
{"name":"masx200_deno_caddy_cluster_reverse_proxy","desc":"deno-caddy-cluster-reverse-proxy,适用于Deno的分布式微服务注册与发现服务器和客户端.","repo":"https://github.com/masx200/deno-caddy-cluster-reverse-proxy","reg":"x","vers":"2.0.2"}
